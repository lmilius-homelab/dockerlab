version: '3.6'
services:
  grafana:
    image: grafana/grafana-oss:9.1.2
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.grafana.entrypoints=websecure"
    - "traefik.http.routers.grafana.rule=Host(`dashboard.lukemilius.com`)"
    #- "traefik.http.routers.grafana.middlewares=tfa_verify@file,internal_only@file"
    - "traefik.http.routers.grafana.middlewares=tfa_verify@file"
    - "traefik.http.routers.grafana.tls=true"
    - "traefik.docker.network=proxy"
    volumes:
    - grafana_data:/var/lib/grafana
    networks:
    - proxy
    - metrics
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: "false"
#       GF_PANELS_DISABLE_SANITIZE_HTML: "true"
      GF_INSTALL_PLUGINS: "grafana-worldmap-panel,grafana-piechart-panel,savantly-heatmap-panel,grafana-clock-panel"

  influxdb:
    image: influxdb:2.2.0
    labels:
    - "traefik.enable=true"
    - "traefik.docker.network=proxy"
    - "traefik.tcp.routers.influxdb_tcp.entrypoints=influxdb"
    - "traefik.tcp.routers.influxdb_tcp.rule=HostSNI(`*`)"
    - "traefik.tcp.routers.influxdb_tcp.service=influxdb_tcp"
    - "traefik.tcp.services.influxdb_tcp.loadbalancer.server.port=8086"
    volumes:
    - influxdb2_data:/var/lib/influxdb2
    - influxdb2_config:/etc/influxdb2
    networks:
    - proxy
    - metrics
    restart: unless-stopped
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: influx
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUX_PASS}
      DOCKER_INFLUXDB_INIT_ORG: homelab
      DOCKER_INFLUXDB_INIT_BUCKET: metrics
      DOCKER_INFLUXDB_INIT_RETENTION: 104w
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUX_ADMIN_TOKEN}

  # influxdb:
  #   image: registry.lukemilius.com/influxdb
  #   labels:
  #   - "traefik.enable=true"
  #   - "traefik.docker.network=proxy"
  #   - "traefik.tcp.routers.influxdb_tcp.entrypoints=influxdb"
  #   - "traefik.tcp.routers.influxdb_tcp.rule=HostSNI(`*`)"
  #   - "traefik.tcp.routers.influxdb_tcp.service=influxdb_tcp"
  #   - "traefik.tcp.services.influxdb_tcp.loadbalancer.server.port=8086"
  #   - "traefik.tcp.routers.graphite.entrypoints=graphite"
  #   - "traefik.tcp.routers.graphite.rule=HostSNI(`*`)"
  #   - "traefik.tcp.routers.graphite.service=graphite"
  #   - "traefik.tcp.services.graphite.loadbalancer.server.port=2003"
  #   volumes:
  #   - influxdb_data:/var/lib/influxdb
  #   networks:
  #   - proxy
  #   - metrics
  #   environment:
  #     INFLUXDB_DB: influxdb
  #   restart: unless-stopped

  telegraf:
    image: telegraf:1.23
    # networks:
    # - metrics
    restart: unless-stopped
    depends_on:
      - influxdb
    network_mode: host
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - telegraf_config:/etc/telegraf:ro
    - /sys:/host/sys:ro
    - /proc:/host/proc:ro
    - /etc:/host/etc:ro
    environment:
      HOST_PROC: /host/proc
      HOST_SYS: /host/sys
      HOST_ETC: /host/etc

networks:
  metrics:
  proxy:
    external: true

volumes:
  grafana_data:
#   data:
  config:
  prom_data:
#  alert_data:
  # influxdb_data:
  influxdb2_data:
  influxdb2_config:
  telegraf_config:
#   es_data:
#   mongo_data:
#   graylog_journal:
