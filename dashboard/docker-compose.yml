version: '3.6'
services:
  grafana:
    image: registry.lukemilius.com/grafana
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.grafana.entrypoints=websecure"
    - "traefik.http.routers.grafana.rule=Host(`dashboard.lukemilius.com`)"
    - "traefik.http.routers.grafana.middlewares=tfa_verify@file"
    - "traefik.http.routers.grafana.tls=true"
    - "traefik.docker.network=proxy"
    volumes:
    - data:/var/lib/grafana
#    - config:/etc/grafana
    networks:
    - proxy
    - metrics
    depends_on:
    - prometheus
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_PANELS_DISABLE_SANITIZE_HTML: "true"
      GF_INSTALL_PLUGINS: "grafana-worldmap-panel,grafana-piechart-panel,savantly-heatmap-panel"


  influxdb:
    image: registry.lukemilius.com/influxdb
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.influxdb.entrypoints=websecure"
    - "traefik.http.routers.influxdb.rule=Host(`influxdb.lukemilius.com`)"
    - "traefik.http.routers.influxdb.middlewares=internal_only@file"
    - "traefik.http.routers.influxdb.tls=true"
    - "traefik.http.routers.influxdb.service=influxdb"
    - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
    - "traefik.docker.network=proxy"
    - "traefik.tcp.routers.influxdb_tcp.entrypoints=influxdb"
    - "traefik.tcp.routers.influxdb_tcp.rule=HostSNI(`*`)"
    - "traefik.tcp.routers.influxdb_tcp.service=influxdb_tcp"
    - "traefik.tcp.services.influxdb_tcp.loadbalancer.server.port=8086"
    - "traefik.tcp.routers.graphite.entrypoints=graphite"
    - "traefik.tcp.routers.graphite.rule=HostSNI(`*`)"
    - "traefik.tcp.routers.graphite.service=graphite"
    - "traefik.tcp.services.graphite.loadbalancer.server.port=2003"
    volumes:
    - influxdb_data:/var/lib/influxdb
    networks:
    - proxy
    - metrics
    environment:
      INFLUXDB_DB: influxdb
    restart: unless-stopped


  prometheus:
    image: registry.lukemilius.com/prometheus:latest
    volumes:
    - prom_data:/prometheus
    depends_on:
    - cadvisor
    networks:
    - metrics
    restart: unless-stopped


  node-exporter:
    image: prom/node-exporter
    volumes:
    - /:/host:ro,rslave
    command:
    - "--path.rootfs=/host"
    - "--collector.filesystem.ignored-mount-points"
    - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
    - metrics
    restart: unless-stopped


  alertmanager:
    image: registry.lukemilius.com/alertmanager
    networks:
    - metrics
    volumes:
    - alert_data:/alertmanager
    restart: unless-stopped

  cadvisor:
    image: google/cadvisor
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    networks:
    - metrics
    restart: unless-stopped

  telegraf:
    image: registry.lukemilius.com/telegraf
    networks:
    - metrics
    restart: unless-stopped

  speedtest:
    image: registry.lukemilius.com/speedtest:1.0.6
    networks:
    - metrics
    restart: unless-stopped

  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.x/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.5
    restart: unless-stopped
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - metrics
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ES_HEAP_SIZE=2g


  cerebro:
    image: lmenezes/cerebro
    depends_on:
      - elasticsearch
    networks:
      - proxy
      - metrics
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cerebro.entrypoints=websecure"
      - "traefik.http.routers.cerebro.rule=Host(`cerebro.lukemilius.com`)"
      - "traefik.http.routers.cerebro.middlewares=tfa_verify@file"
      - "traefik.http.routers.cerebro.tls=true"
      - "traefik.docker.network=proxy"
    restart: unless-stopped
    expose:
      - 9000

  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: registry.lukemilius.com/graylog
    volumes:
      - graylog_journal:/usr/share/graylog/data/journal
    depends_on:
      - mongo
      - elasticsearch
    expose:
      - 9000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.graylog.entrypoints=websecure"
      - "traefik.http.routers.graylog.rule=Host(`graylog.lukemilius.com`)"
      - "traefik.http.routers.graylog.middlewares=tfa_verify@file"
      - "traefik.http.routers.graylog.tls=true"
      - "traefik.docker.network=proxy"
      - "traefik.udp.routers.netflow.entrypoints=netflow"
#      - "traefik.udp.routers.netflow.rule=HostSNI(`*`)"
      - "traefik.udp.routers.netflow.service=netflow"
      - "traefik.udp.services.netflow.loadbalancer.server.port=2055"
      - "traefik.udp.routers.syslog_feed.entrypoints=syslog_feed"
#      - "traefik.udp.routers.syslog_feed.rule=HostSNI(`*`)"
      - "traefik.udp.routers.syslog_feed.service=syslog_feed"
      - "traefik.udp.services.syslog_feed.loadbalancer.server.port=5442"
      - "traefik.udp.routers.syslog_udp.entrypoints=syslog_udp"
#      - "traefik.udp.routers.syslog_udp.rule=HostSNI(`*`)"
      - "traefik.udp.routers.syslog_udp.service=syslog_udp"
      - "traefik.udp.services.syslog_udp.loadbalancer.server.port=1514"
      - "traefik.tcp.routers.syslog_tcp.entrypoints=syslog"
      - "traefik.tcp.routers.syslog_tcp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.syslog_tcp.service=syslog_tcp"
      - "traefik.tcp.services.syslog_tcp.loadbalancer.server.port=1514"
      - "traefik.udp.routers.gelf_udp.entrypoints=gelf_udp"
#      - "traefik.udp.routers.gelf_udp.rule=HostSNI(`*`)"
      - "traefik.udp.routers.gelf_udp.service=gelf_udp"
      - "traefik.udp.services.gelf_udp.loadbalancer.server.port=12201"
      - "traefik.tcp.routers.gelf_tcp.entrypoints=gelf"
      - "traefik.tcp.routers.gelf_tcp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.gelf_tcp.service=gelf_tcp"
      - "traefik.tcp.services.gelf_tcp.loadbalancer.server.port=12201"
    networks:
      - proxy
      - metrics
    restart: unless-stopped
    environment:
      GRAYLOG_PASSWORD_SECRET: ${GRAYLOG_PASSWORD_SECRET}
      GRAYLOG_ROOT_PASSWORD_SHA2: ${GRAYLOG_ROOT_PASSWORD_SHA2}
      GRAYLOG_HTTP_EXTERNAL_URI: https://graylog.lukemilius.com/
      GRAYLOG_TIMEZONE: America/Chicago


  # Kibana : https://www.elastic.co/guide/en/kibana/6.8/index.html
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.8.5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kibana.entrypoints=websecure"
      - "traefik.http.routers.kibana.rule=Host(`kibana.lukemilius.com`)"
      - "traefik.http.routers.kibana.middlewares=tfa_verify@file"
      - "traefik.http.routers.kibana.tls=true"
      - "traefik.docker.network=proxy"
    depends_on:
      - elasticsearch
    networks:
      - proxy
      - metrics
    restart: unless-stopped
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200

  # MongoDB: https://hub.docker.com/_/mongo/
  mongo:
    image: mongo:3
    volumes:
      - mongo_data:/data/db
    networks:
      - metrics

networks:
  metrics:
  proxy:
    external: true

volumes:
  data:
  config:
  prom_data:
  alert_data:
  influxdb_data:
  es_data:
  mongo_data:
  graylog_journal:
