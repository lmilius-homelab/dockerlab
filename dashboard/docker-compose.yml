version: '3.6'
services:
  grafana:
    image: grafana/grafana
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.grafana.entrypoints=websecure"
    - "traefik.http.routers.grafana.rule=Host(`dashboard.lukemilius.com`)"
    - "traefik.http.routers.grafana.middlewares=tfa_verify@file"
    - "traefik.http.routers.grafana.tls=true"
    - "traefik.docker.network=proxy-overlay"
    volumes:
    - data:/var/lib/grafana
    - config:/etc/grafana
    networks:
    - proxy-overlay
    - metrics
    depends_on:
    - prometheus
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_PANELS_DISABLE_SANITIZE_HTML: "true"

  influxdb:
    image: registry.lukemilius.com/influxdb
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.influxdb.entrypoints=websecure"
    - "traefik.http.routers.influxdb.rule=Host(`influxdb.lukemilius.com`)"
    - "traefik.http.routers.influxdb.middlewares=internal_only@file"
    - "traefik.http.routers.influxdb.tls=true"
    - "traefik.http.routers.influxdb.service=influxdb"
    - "traefik.http.services.influxdb.loadbalancer.server.port=8086"
    - "traefik.docker.network=proxy-overlay"
    - "traefik.tcp.routers.graphite.entrypoints=graphite"
    - "traefik.tcp.routers.graphite.rule=HostSNI(`*`)"
    - "traefik.tcp.routers.graphite.service=graphite"
    - "traefik.tcp.services.graphite.loadbalancer.server.port=2003"
    volumes:
    - influxdb_data:/var/lib/influxdb
    networks:
    - proxy-overlay
    - metrics
    environment:
      INFLUXDB_DB: influxdb
    deploy:
      restart_policy:
        condition: on-failure

  prometheus:
    image: registry.lukemilius.com/prometheus:latest
    volumes:
    - prom_data:/prometheus
    depends_on:
    - cadvisor
    networks:
    - metrics
    deploy:
      restart_policy:
        condition: on-failure

  node-exporter:
    image: prom/node-exporter
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    command:
    - '--path.procfs=/host/proc'
    - '--path.sysfs=/host/sys'
    - '--collector.filesystem.ignored-mount-points'
    - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
    - metrics
    deploy:
      restart_policy:
        condition: on-failure


  alertmanager:
    image: registry.lukemilius.com/alertmanager
    networks:
    - metrics
    volumes:
    - alert_data:/alertmanager
    deploy:
      restart_policy:
        condition: on-failure

  cadvisor:
    image: google/cadvisor
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    networks:
    - metrics
    deploy:
      restart_policy:
        condition: on-failure

  telegraf:
    image: registry.lukemilius.com/telegraf
    networks:
    - metrics
    deploy:
      restart_policy:
        condition: on-failure

  speedtest:
    image: registry.lukemilius.com/speedtest:latest
    networks:
    - metrics
    deploy:
      restart_policy:
        condition: on-failure

networks:
  metrics:
  proxy-overlay:
    external: true

volumes:
  data:
  config:
  prom_data:
  alert_data:
  influxdb_data:
