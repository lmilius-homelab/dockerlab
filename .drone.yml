---
kind: pipeline
name: portainer
type: docker

trigger:
  branch:
  - master
  event:
  - push

steps:
- name: Deploy
  image: docker/compose
  commands:
  - cd portainer
  - docker-compose pull
  - docker-compose up -d
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  when:
    event:
    - push

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock

---
kind: pipeline
name: backups
type: docker

trigger:
  branch:
  - master
  event:
  - push

steps:
- name: Deploy
  image: docker/compose
  commands:
  - cd backups
  - docker-compose pull
  - docker-compose up -d
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  when:
    event:
    - push

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock


---
kind: pipeline
name: dashboard
type: docker

trigger:
  branch:
  - master
  event:
  - push

steps:
- name: Deploy
  image: docker/compose
  commands:
  - cd dashboard
  - docker-compose pull
  - docker-compose up -d --remove-orphans
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  when:
    event:
    - push
  environment:
    GF_SECURITY_ADMIN_PASSWORD:
      from_secret: admin_password
    INFLUX_PASS:
      from_secret: influx_password
    INFLUX_ADMIN_TOKEN:
      from_secret: influx_admin_token
    # GRAYLOG_PASSWORD_SECRET:
    #   from_secret: graylog_password_secret
    # GRAYLOG_ROOT_PASSWORD_SHA2:
    #   from_secret: graylog_root_password_sha2

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock

# ---
# kind: pipeline
# name: organizr
# type: docker

# trigger:
#   branch:
#   - master
#   event:
#   - push

# steps:
# - name: Deploy
#   image: docker/compose
#   commands:
#   - cd organizr
#   - docker-compose pull
#   - docker-compose up -d
#   volumes:
#   - name: dockersock
#     path: /var/run/docker.sock
#   when:
#     event:
#     - push

# volumes:
# - name: dockersock
#   host:
#     path: /var/run/docker.sock


---
kind: pipeline
name: ddns
type: docker

trigger:
  branch:
  - master
  event:
  - push

steps:
- name: Deploy
  image: docker/compose
  commands:
  - cd ddns
  - docker-compose pull
  - docker-compose up -d
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  when:
    event:
    - push
  environment:
    API_KEY:
      from_secret: ddns_token

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock

---
kind: pipeline
name: registry
type: docker

trigger:
  branch:
  - master
  event:
  - push

steps:
- name: Deploy
  image: docker/compose
  commands:
  - cd registry
  - docker-compose pull
  - docker-compose up -d
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  when:
    event:
    - push

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock


# ---
# kind: pipeline
# name: bitwarden
# type: docker

# trigger:
#   branch:
#   - master
#   event:
#   - push

# steps:
# - name: Deploy
#   image: docker/compose
#   commands:
#   - cd bitwarden
#   - docker-compose pull
#   - docker-compose up -d
#   volumes:
#   - name: dockersock
#     path: /var/run/docker.sock
#   environment:
#     BITWARDEN_ADMIN:
#       from_secret: bitwarden_admin_token
#   when:
#     event:
#     - push

# volumes:
# - name: dockersock
#   host:
#     path: /var/run/docker.sock


#---
#kind: pipeline
#name: photos
#type: docker
#
#trigger:
#  branch:
#  - master
#  event:
#  - push
#
#steps:
#- name: Deploy
#  image: docker/compose
#  commands:
#  - cd photos
#  - docker-compose down
##  - docker-compose pull
##  - docker-compose up -d
#  volumes:
#  - name: dockersock
#    path: /var/run/docker.sock
#  environment:
#    MYSQL_PASSWORD:
#      from_secret: photoview_user_password
#    MYSQL_ROOT_PASSWORD:
#      from_secret: photoview_root_password
#    MAPBOX_TOKEN:
#      from_secret: mapbox_token
#  when:
#    event:
#    - push
#
#volumes:
#- name: dockersock
#  host:
#    path: /var/run/docker.sock


# ---
# kind: pipeline
# name: photoprism
# type: docker

# trigger:
#   branch:
#   - master
#   event:
#   - push

# steps:
# - name: Deploy
#   image: docker/compose
#   commands:
#   - cd photoprism
#   - docker-compose down
# #  - docker-compose pull
# #  - docker-compose up -d
#   volumes:
#   - name: dockersock
#     path: /var/run/docker.sock
#   environment:
#     MYSQL_PASSWORD:
#       from_secret: photoview_user_password
#     MYSQL_ROOT_PASSWORD:
#       from_secret: photoview_root_password
#     ADMIN_PASSWORD:
#       from_secret: admin_password
#   when:
#     event:
#     - push

# volumes:
# - name: dockersock
#   host:
#     path: /var/run/docker.sock



# ---
# kind: pipeline
# name: wiki
# type: docker

# trigger:
#   branch:
#   - master
#   event:
#   - push

# steps:
# - name: Deploy
#   image: docker/compose
#   commands:
#   - cd wiki
#   - docker-compose pull
#   - docker-compose up -d
#   volumes:
#   - name: dockersock
#     path: /var/run/docker.sock
#   environment:
#     DB_PASS:
#       from_secret: wiki_db_password
#   when:
#     event:
#     - push

# volumes:
# - name: dockersock
#   host:
#     path: /var/run/docker.sock


# ---
# kind: pipeline
# name: syncthing
# type: docker

# trigger:
#   branch:
#   - master
#   event:
#   - push

# steps:
# - name: Deploy
#   image: docker/compose
#   commands:
#   - cd syncthing
#   - docker-compose pull
#   - docker-compose up -d
#   volumes:
#   - name: dockersock
#     path: /var/run/docker.sock
#   when:
#     event:
#     - push

# volumes:
# - name: dockersock
#   host:
#     path: /var/run/docker.sock

# ---
# kind: pipeline
# name: status
# type: docker

# trigger:
#   branch:
#   - master
#   event:
#   - push

# steps:
# - name: Deploy
#   image: docker/compose
#   commands:
#   - cd status
#   - docker-compose pull
#   - docker-compose up -d
#   volumes:
#   - name: dockersock
#     path: /var/run/docker.sock
#   when:
#     event:
#     - push

# volumes:
# - name: dockersock
#   host:
#     path: /var/run/docker.sock

# ---
# kind: pipeline
# name: grocy
# type: docker

# trigger:
#   branch:
#   - master
#   event:
#   - push

# steps:
# - name: Deploy
#   image: docker/compose
#   commands:
#   - cd grocy
#   - docker-compose pull
#   - docker-compose up -d
#   volumes:
#   - name: dockersock
#     path: /var/run/docker.sock
#   when:
#     event:
#     - push

# volumes:
# - name: dockersock
#   host:
#     path: /var/run/docker.sock


# ---
# kind: pipeline
# name: books
# type: docker

# trigger:
#   branch:
#   - master
#   event:
#   - push

# steps:
# - name: Deploy
#   image: docker/compose
#   commands:
#   - cd books
#   - docker-compose pull
#   - docker-compose up -d
#   volumes:
#   - name: dockersock
#     path: /var/run/docker.sock
#   when:
#     event:
#     - push
#   environment:
#     ADMIN_PASSWORD:
#       from_secret: admin_password

# volumes:
# - name: dockersock
#   host:
#     path: /var/run/docker.sock


---
kind: pipeline
name: home
type: docker

trigger:
  branch:
  - master
  event:
  - push

steps:
- name: Deploy
  image: docker/compose
  commands:
  - cd home
  - docker-compose pull
  - docker-compose up -d
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  when:
    event:
    - push

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock


# ---
# kind: pipeline
# name: peertube
# type: docker

# trigger:
#   branch:
#   - master
#   event:
#   - push

# steps:
# - name: Deploy
#   image: docker/compose
#   commands:
#   - cd peertube
#   - docker-compose pull
#   - docker-compose up -d
#   volumes:
#   - name: dockersock
#     path: /var/run/docker.sock
#   when:
#     event:
#     - push
#   environment:
#     DB_PASSWORD:
#       from_secret: peertube_db_password
#     ADMIN_EMAIL:
#       from_secret: admin_email

# volumes:
# - name: dockersock
#   host:
#     path: /var/run/docker.sock
